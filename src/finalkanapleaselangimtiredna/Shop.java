/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package finalkanapleaselangimtiredna;

import java.awt.event.MouseEvent;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author rexiepimentelMBP
 */
public class Shop extends javax.swing.JFrame {
    ShopInventory stock;
    Item currentItem;
    int currentItemIndex;
    Inventory inventoryFrame;
    Main mainFrame;
    
    // Default Constructor. Do not remove
    public Shop(){};
    
    public Shop(PlayerInventory recipientInventory) {
        stock = new ShopInventory(recipientInventory);
        initComponents();
        displayItem();
        tableItems.getTableHeader().setResizingAllowed(false);
        tableItems.getTableHeader().setReorderingAllowed(false);
        mani.setText("Money: "+recipientInventory.getMoney());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        panelItemInfo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDesc = new javax.swing.JTextArea();
        panelItemList = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableItems = new javax.swing.JTable();
        panelButtons = new javax.swing.JPanel();
        btnBuy = new javax.swing.JButton();
        txtCost = new javax.swing.JTextField();
        txtTotalPrice = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        txtName1 = new javax.swing.JTextField();
        mani = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelItemInfo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelItemInfo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Selected Item Image");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelItemInfo.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 330, 320));

        txtDesc.setColumns(15);
        txtDesc.setLineWrap(true);
        txtDesc.setRows(5);
        txtDesc.setWrapStyleWord(true);
        jScrollPane2.setViewportView(txtDesc);

        panelItemInfo.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 330, 330, 360));

        getContentPane().add(panelItemInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 690));

        panelItemList.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tableItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableItemsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableItems);

        panelButtons.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBuy.setText("Buy");
        btnBuy.setEnabled(false);
        btnBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuyActionPerformed(evt);
            }
        });
        panelButtons.add(btnBuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 530, 189, 76));

        txtCost.setEditable(false);
        txtCost.setText("0");
        txtCost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCostActionPerformed(evt);
            }
        });
        panelButtons.add(txtCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 380, 110, 50));

        txtTotalPrice.setEditable(false);
        txtTotalPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalPriceActionPerformed(evt);
            }
        });
        panelButtons.add(txtTotalPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 480, 110, 50));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Item Name:");
        panelButtons.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 330, -1, 50));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Quantity:");
        panelButtons.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 430, 60, 50));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Total Price:");
        panelButtons.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 490, -1, 40));

        txtQuantity.setModel(new javax.swing.SpinnerNumberModel());
        txtQuantity.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtQuantity.setEditor(new javax.swing.JSpinner.NumberEditor(txtQuantity, ""));
        txtQuantity.setEnabled(false);
        txtQuantity.setValue(1);
        txtQuantity.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                txtQuantityStateChanged(evt);
            }
        });
        panelButtons.add(txtQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 430, 110, 50));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Item Cost:");
        panelButtons.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, -1, 50));

        txtName1.setEditable(false);
        txtName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtName1ActionPerformed(evt);
            }
        });
        panelButtons.add(txtName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 330, 110, 50));

        mani.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        panelButtons.add(mani, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 170, 40));

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        panelButtons.add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 610, 189, 76));

        javax.swing.GroupLayout panelItemListLayout = new javax.swing.GroupLayout(panelItemList);
        panelItemList.setLayout(panelItemListLayout);
        panelItemListLayout.setHorizontalGroup(
            panelItemListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelItemListLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 661, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panelItemListLayout.setVerticalGroup(
            panelItemListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelItemListLayout.createSequentialGroup()
                .addGroup(panelItemListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(panelItemList, new org.netbeans.lib.awtextra.AbsoluteConstraints(335, 0, 870, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void updateDisplay() {
        displayItem();
        
    }
    
    public void setInvFrame(Inventory inv) {
        inventoryFrame = inv;
    }
    
    public void setMainFrame(Main main) {
        mainFrame = main;
    }
    
    public int totalCost(){
        int quantity = (int) txtQuantity.getValue();
        int cost = currentItem.getItemPrice();
        int totalCost = quantity * cost;
  
        txtTotalPrice.setText(""+totalCost);
        return totalCost;
    }
    
    private void txtCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCostActionPerformed

    private void txtTotalPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalPriceActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtTotalPriceActionPerformed

    private void txtQuantityStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_txtQuantityStateChanged
        totalCost();
        
        if(stock.getRecipientInventory().getMoney() >= totalCost() && stock.CONTENTS.get(currentItem) > 0) {
            btnBuy.setEnabled(true);
        }
        else {
            btnBuy.setEnabled(false);
        }
    }//GEN-LAST:event_txtQuantityStateChanged

    private void btnBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuyActionPerformed
        stock.getRecipientInventory().setMoney(stock.getRecipientInventory().getMoney()-totalCost());
        mani.setText("Money: "+stock.getRecipientInventory().getMoney());
        stock.updateStock(currentItemIndex, stock.CONTENTS.get(currentItem)-(int) txtQuantity.getValue());
        
        stock.getRecipientInventory().addItem(currentItem, (int) txtQuantity.getValue());
        
        // Buy Button update
        if(stock.getRecipientInventory().getMoney() >= totalCost() && stock.CONTENTS.get(currentItem) - (int) txtQuantity.getValue() > 0) {
            btnBuy.setEnabled(true);
        }
        else {
            btnBuy.setEnabled(false);
        }
        
        if(stock.CONTENTS.get(currentItem)-(int) txtQuantity.getValue() <= 0) {
            txtQuantity.setEnabled(false);
        }
        
        displayItem();
        inventoryFrame.updateDisplay();
    }//GEN-LAST:event_btnBuyActionPerformed

    private void tableItemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableItemsMouseClicked
        currentItemIndex = tableItems.getSelectedRow();
        currentItem = stock.getItemAt(currentItemIndex);
        
        txtQuantity.setEnabled(true);
        
        
        SpinnerNumberModel snm = new SpinnerNumberModel();
        snm.setMaximum(stock.CONTENTS.get(currentItem));
        
        if(stock.CONTENTS.get(currentItem) <= 0) {
            txtQuantity.setEnabled(false);
        } 
        
        if(stock.getRecipientInventory().getMoney() >= totalCost() && stock.CONTENTS.get(currentItem) > 0) {
            btnBuy.setEnabled(true);
        }
        else {
            btnBuy.setEnabled(false);
        }
        
        snm.setMinimum(1);
        snm.setValue(1);
        txtQuantity.setValue(1); 
        txtQuantity.setModel(snm);
        
        txtDesc.setText(currentItem.getDescription());
        txtName1.setText(currentItem.getItemName());
        txtCost.setText(""+currentItem.getItemPrice());
        totalCost();
    }//GEN-LAST:event_tableItemsMouseClicked

    private void txtName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtName1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        stock.getRecipientInventory().setMoney(stock.getRecipientInventory().getMoney()+250);
        mani.setText("Money: "+stock.getRecipientInventory().getMoney());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // WIP // Display Updater
        mani.setText("Money: "+stock.getRecipientInventory().getMoney());
        if(currentItem != null && stock.getRecipientInventory().getMoney() >= totalCost() && stock.CONTENTS.get(currentItem) > 0) {
            btnBuy.setEnabled(true);
        }
        else {
            btnBuy.setEnabled(false);
        }
    }//GEN-LAST:event_formWindowActivated

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        mainFrame.setContentPane(mainFrame.mainContentPane);
    }//GEN-LAST:event_btnCloseActionPerformed


    public void displayItem(){ 
        javax.swing.table.DefaultTableModel dfTableModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        
        dfTableModel.addColumn("Item");
        dfTableModel.addColumn("Price");
        dfTableModel.addColumn("Stock");
        
        Object[] keySet = stock.CONTENTS.keySet().toArray();
        for(int i = 0; i < keySet.length; i++) {
            Item currentItem = (Item) keySet[i];
            dfTableModel.addRow(new Object[]{currentItem.getItemName(), currentItem.getItemPrice(), stock.CONTENTS.get(currentItem)});
        }

        tableItems.setModel(dfTableModel);
        
    }
    
    public void getSelectedItem(){
        
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Shop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Shop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Shop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Shop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Shop().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuy;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel mani;
    private javax.swing.JPanel panelButtons;
    private javax.swing.JPanel panelItemInfo;
    private javax.swing.JPanel panelItemList;
    private javax.swing.JTable tableItems;
    private javax.swing.JTextField txtCost;
    private javax.swing.JTextArea txtDesc;
    private javax.swing.JTextField txtName1;
    private javax.swing.JSpinner txtQuantity;
    private javax.swing.JTextField txtTotalPrice;
    // End of variables declaration//GEN-END:variables
}
