/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package finalkanapleaselangimtiredna;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedInputStream;
import java.io.InputStream;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author rexiepimentelMBP
 */
public class Main extends javax.swing.JFrame {

    
    /**
     * Creates new form Main
     */
    int worldLevel = 1;
   
    PlayerInventory sharedInventory = new PlayerInventory();
    
    Rex rex = new Rex(sharedInventory);
    Arth arth = new Arth(sharedInventory);
    Aaron aaron = new Aaron(sharedInventory);
    
    Enemy enemy = Enemy.generateEnemy(worldLevel);
    
    Player activeCharacter;
    
    InputStream music;
    
    Shop shop;
    Inventory inventory;
    
    public Main() {
        initComponents();
        activeCharacter = arth;
        sharedInventory.setActiveCharacter(activeCharacter);
        sharedInventory.setMoney(500);
        shop = new Shop(sharedInventory);
        shop.setDefaultCloseOperation(javax.swing.JFrame.HIDE_ON_CLOSE);
        inventory = new Inventory(sharedInventory);;
        inventory.setDefaultCloseOperation(javax.swing.JFrame.HIDE_ON_CLOSE);
        
        shop.setMainFrame(this);
        inventory.setMainFrame(this);
        shop.setInvFrame(inventory);
        inventory.setShopFrame(shop);
        updateLabelAndBars();
        
        btnAaron.setVisible(false);
        btnRex.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnArth = new javax.swing.JButton();
        btnRex = new javax.swing.JButton();
        btnAaron = new javax.swing.JButton();
        Shop = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        Inventory = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        PanelBattlemiscellaneous = new javax.swing.JPanel();
        PanelPlayerInfo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pBarActiveCharacterHP = new javax.swing.JProgressBar();
        pBarActiveCharacterMana = new javax.swing.JProgressBar();
        lblActiveCharacter = new javax.swing.JLabel();
        lblActiveCharacterHpAndMaxHp = new javax.swing.JLabel();
        lblActiveCharacterManaAndMaxMana = new javax.swing.JLabel();
        PanelBattleDoings = new javax.swing.JPanel();
        btnBasicAttack = new javax.swing.JButton();
        btnDodge = new javax.swing.JButton();
        btnSkill1 = new javax.swing.JButton();
        btnSkill2 = new javax.swing.JButton();
        PanelEnemyInfo = new javax.swing.JPanel();
        lblEnemyName = new javax.swing.JLabel();
        pBarEnemyHp = new javax.swing.JProgressBar();
        lblEnemyHpAndMaxHp = new javax.swing.JLabel();
        lblFloorLevel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lblSkill2Icon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnArth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/128bit/iconArth.png"))); // NOI18N
        btnArth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArthActionPerformed(evt);
            }
        });
        jPanel1.add(btnArth, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 88, 75, 122));

        btnRex.setIcon(new javax.swing.ImageIcon(getClass().getResource("/128bit/iconRex.png"))); // NOI18N
        btnRex.setEnabled(false);
        btnRex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRexActionPerformed(evt);
            }
        });
        jPanel1.add(btnRex, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 216, 75, 122));

        btnAaron.setIcon(new javax.swing.ImageIcon(getClass().getResource("/128bit/iconAaron.png"))); // NOI18N
        btnAaron.setEnabled(false);
        btnAaron.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAaronActionPerformed(evt);
            }
        });
        jPanel1.add(btnAaron, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 344, 75, 122));

        Shop.setText("Shop");
        Shop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShopActionPerformed(evt);
            }
        });
        jPanel1.add(Shop, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 634, 75, -1));

        jButton1.setText("GenerateEnemy");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 667, 75, -1));

        Inventory.setText("Bag");
        Inventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InventoryActionPerformed(evt);
            }
        });
        jPanel1.add(Inventory, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 601, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 90, -1));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(null);

        PanelBattlemiscellaneous.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        PanelPlayerInfo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("HP:");

        jLabel2.setText("Mana:");

        lblActiveCharacter.setText("Active Character Name");

        lblActiveCharacterHpAndMaxHp.setText("HpAndMaxHp");

        lblActiveCharacterManaAndMaxMana.setText("ManaAndMaxMana");

        javax.swing.GroupLayout PanelPlayerInfoLayout = new javax.swing.GroupLayout(PanelPlayerInfo);
        PanelPlayerInfo.setLayout(PanelPlayerInfoLayout);
        PanelPlayerInfoLayout.setHorizontalGroup(
            PanelPlayerInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPlayerInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelPlayerInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelPlayerInfoLayout.createSequentialGroup()
                        .addGroup(PanelPlayerInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelPlayerInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelPlayerInfoLayout.createSequentialGroup()
                                .addComponent(pBarActiveCharacterHP, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblActiveCharacterHpAndMaxHp))
                            .addGroup(PanelPlayerInfoLayout.createSequentialGroup()
                                .addComponent(pBarActiveCharacterMana, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblActiveCharacterManaAndMaxMana))))
                    .addComponent(lblActiveCharacter))
                .addContainerGap(145, Short.MAX_VALUE))
        );
        PanelPlayerInfoLayout.setVerticalGroup(
            PanelPlayerInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPlayerInfoLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblActiveCharacter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelPlayerInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanelPlayerInfoLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(lblActiveCharacterManaAndMaxMana))
                    .addGroup(PanelPlayerInfoLayout.createSequentialGroup()
                        .addGroup(PanelPlayerInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(PanelPlayerInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(pBarActiveCharacterHP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1))
                            .addComponent(lblActiveCharacterHpAndMaxHp))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelPlayerInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(pBarActiveCharacterMana, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(26, 26, 26))
        );

        PanelBattleDoings.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnBasicAttack.setText("Basic Attack");
        btnBasicAttack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actionTurnHandler(evt);
            }
        });
        btnBasicAttack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBasicAttackActionPerformed(evt);
            }
        });

        btnDodge.setText("Dodge");
        btnDodge.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actionTurnHandler(evt);
            }
        });
        btnDodge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodgeActionPerformed(evt);
            }
        });

        btnSkill1.setText("Skill1");
        btnSkill1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actionTurnHandler(evt);
            }
        });

        btnSkill2.setText("Skill2");
        btnSkill2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actionTurnHandler(evt);
            }
        });
        btnSkill2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSkill2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelBattleDoingsLayout = new javax.swing.GroupLayout(PanelBattleDoings);
        PanelBattleDoings.setLayout(PanelBattleDoingsLayout);
        PanelBattleDoingsLayout.setHorizontalGroup(
            PanelBattleDoingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBattleDoingsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBasicAttack, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDodge, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSkill1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSkill2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        PanelBattleDoingsLayout.setVerticalGroup(
            PanelBattleDoingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBattleDoingsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelBattleDoingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSkill2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSkill1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDodge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBasicAttack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout PanelBattlemiscellaneousLayout = new javax.swing.GroupLayout(PanelBattlemiscellaneous);
        PanelBattlemiscellaneous.setLayout(PanelBattlemiscellaneousLayout);
        PanelBattlemiscellaneousLayout.setHorizontalGroup(
            PanelBattlemiscellaneousLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBattlemiscellaneousLayout.createSequentialGroup()
                .addComponent(PanelPlayerInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelBattleDoings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PanelBattlemiscellaneousLayout.setVerticalGroup(
            PanelBattlemiscellaneousLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelPlayerInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PanelBattleDoings, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel2.add(PanelBattlemiscellaneous);
        PanelBattlemiscellaneous.setBounds(1, 584, 1097, 111);

        PanelEnemyInfo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblEnemyName.setText("lblEnemyName");

        lblEnemyHpAndMaxHp.setText("HpAndMaxHp");

        lblFloorLevel.setText("Floor Level");

        javax.swing.GroupLayout PanelEnemyInfoLayout = new javax.swing.GroupLayout(PanelEnemyInfo);
        PanelEnemyInfo.setLayout(PanelEnemyInfoLayout);
        PanelEnemyInfoLayout.setHorizontalGroup(
            PanelEnemyInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEnemyInfoLayout.createSequentialGroup()
                .addGroup(PanelEnemyInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelEnemyInfoLayout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(lblFloorLevel)
                        .addGap(160, 160, 160)
                        .addComponent(pBarEnemyHp, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblEnemyHpAndMaxHp))
                    .addGroup(PanelEnemyInfoLayout.createSequentialGroup()
                        .addGap(502, 502, 502)
                        .addComponent(lblEnemyName)))
                .addContainerGap(198, Short.MAX_VALUE))
        );
        PanelEnemyInfoLayout.setVerticalGroup(
            PanelEnemyInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelEnemyInfoLayout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addComponent(lblEnemyName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelEnemyInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pBarEnemyHp, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEnemyHpAndMaxHp)
                    .addComponent(lblFloorLevel))
                .addGap(29, 29, 29))
        );

        jPanel2.add(PanelEnemyInfo);
        PanelEnemyInfo.setBounds(1, 1, 1097, 79);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblSkill2Icon.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblSkill2Icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel3.add(lblSkill2Icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 1090, 410));

        jPanel2.add(jPanel3);
        jPanel3.setBounds(1, 86, 1097, 490);

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(91, 0, 1107, 701));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
        Timer timer = new Timer(4000, new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            lblSkill2Icon.setIcon(null);
            }
        });
           
    public boolean hasLost() {
        if((!rex.isDead || !btnRex.isEnabled()) && (!aaron.isDead || !btnAaron.isEnabled()) && (!arth.isDead || !btnArth.isEnabled())) {
            System.out.println("here hasLost");
            return false;
        }
        return true;
    }
        
    private void btnArthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArthActionPerformed
        // TODO add your handling code here:
        arth.getStats();
 
        btnArth.setSelected(true);
        btnAaron.setSelected(false);
        btnRex.setSelected(false);
        
        sharedInventory.setActiveCharacter(activeCharacter);
        btnSkill1.setText("<html>Scolio<br>Attack<html>");
        btnSkill2.setText("Hackerman");
        if(activeCharacter != arth) {
            enemyTakeTurn();
        }
        activeCharacter = arth;
        updateLabelAndBars();
    }//GEN-LAST:event_btnArthActionPerformed

    private void btnRexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRexActionPerformed
        // TODO add your handling code here:
        rex.getStats();
 
        btnRex.setSelected(true);
        btnArth.setSelected(false);
        btnAaron.setSelected(false);
        
        sharedInventory.setActiveCharacter(activeCharacter);
        btnSkill1.setText("<html>Mac<br>Attack<html>");
        btnSkill2.setText("<html>Money<br>Attack<html>");
        if(activeCharacter != rex) {
            enemyTakeTurn();
        }
        activeCharacter = rex;
        updateLabelAndBars();
    }//GEN-LAST:event_btnRexActionPerformed

    private void btnAaronActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAaronActionPerformed
        // TODO add your handling code here:
        aaron.getStats();
        
        btnAaron.setSelected(true);
        btnRex.setSelected(false);
        btnArth.setSelected(false);
        
        sharedInventory.setActiveCharacter(activeCharacter);
        btnSkill1.setText("<html>Instant<br>Sleep<html>");
        btnSkill2.setText("BadLuck");
        if(activeCharacter != aaron) {
            enemyTakeTurn();
        }
        activeCharacter = aaron;
        updateLabelAndBars();
    }//GEN-LAST:event_btnAaronActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        enemy.getStats();
        worldLevel ++;
        enemy = Enemy.generateEnemy(worldLevel);
        unlockCharacter();
        
        updateLabelAndBars();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ShopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShopActionPerformed
        shop.setVisible(true);
    }//GEN-LAST:event_ShopActionPerformed

    private void generateEnemy(){
        enemy = Enemy.generateEnemy(worldLevel);
    }
    private void btnBasicAttackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBasicAttackActionPerformed
        // TODO add your handling code here:
        
        updateLabelAndBars();        
        
        int damageDealt = basicAttackDamageDealt() - enemy.defense;
        
        enemy.removeHp(damageDealt);
        
        if (enemy.isDead) {
            System.out.println("Enemy is Defeated!!!");
            worldLevel ++;
            generateEnemy();
        }

        updateLabelAndBars();        
        
        enemyTakeTurn();
    }//GEN-LAST:event_btnBasicAttackActionPerformed

    private void btnSkill2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSkill2ActionPerformed
        // TODO add your handling code here:
        
        if (activeCharacter.equals(arth)) {
            
            lblSkill2Icon.setIcon(new ImageIcon(getClass().getResource("/Animations/skill2ArthAnimation.gif")));
            timer.start();
            timer.setRepeats(false);
            
            try {
                InputStream is = getClass().getResourceAsStream("/Music/arthTheme.wav");
                if (is == null) {
                    System.err.println("File not found!");
                    return;
                }

                AudioInputStream audioStream = AudioSystem.getAudioInputStream(new BufferedInputStream(is));
                Clip clip = AudioSystem.getClip();
                clip.open(audioStream);
                clip.start();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        } else if (activeCharacter.equals(aaron)) {
            
            lblSkill2Icon.setIcon(new ImageIcon(getClass().getResource("/Animations/skill2AaronAnimation.gif")));
            timer.start();
            timer.setRepeats(false);
            
            try {
                InputStream is = getClass().getResourceAsStream("/Music/aaronTheme.wav");
                if (is == null) {
                    System.err.println("File not found!");
                    return;
                }

                AudioInputStream audioStream = AudioSystem.getAudioInputStream(new BufferedInputStream(is));
                Clip clip = AudioSystem.getClip();
                clip.open(audioStream);
                clip.start();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        } else if (activeCharacter.equals(rex)) {
            
            lblSkill2Icon.setIcon(new ImageIcon(getClass().getResource("/Animations/skill2RexAnimation.gif")));
            timer.start();
            timer.setRepeats(false);
            
            try {
                InputStream is = getClass().getResourceAsStream("/Music/aaronTheme.wav");
                if (is == null) {
                    System.err.println("File not found!");
                    return;
                }

                AudioInputStream audioStream = AudioSystem.getAudioInputStream(new BufferedInputStream(is));
                Clip clip = AudioSystem.getClip();
                clip.open(audioStream);
                clip.start();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnSkill2ActionPerformed

    private void btnDodgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodgeActionPerformed
        // TODO add your handling code here:
        if (activeCharacter.equals(arth)) {
            
            lblSkill2Icon.setIcon(new ImageIcon(getClass().getResource("/Animations/skill2ArthAnimation.gif")));
            timer.start();
            timer.setRepeats(false);
            
            activeCharacter.dodge();
        } else if (activeCharacter.equals(aaron)) {
            
            lblSkill2Icon.setIcon(new ImageIcon(getClass().getResource("/Animations/skill2AaronAnimation.gif")));
            timer.start();
            timer.setRepeats(false);
            
            activeCharacter.dodge();
        } else if (activeCharacter.equals(rex)) {
            
            lblSkill2Icon.setIcon(new ImageIcon(getClass().getResource("/Animations/skill2RexAnimation.gif")));
            timer.start();
            timer.setRepeats(false);
            
            activeCharacter.dodge();
        }        
    }//GEN-LAST:event_btnDodgeActionPerformed

    private void InventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InventoryActionPerformed
        inventory.setVisible(true);
    }//GEN-LAST:event_InventoryActionPerformed

    private void actionTurnHandler(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actionTurnHandler
        enemyTakeTurn();
        System.out.println("Here comes the sun toodoodoodoo");
    }//GEN-LAST:event_actionTurnHandler

    public void unlockCharacter(){
        
        if (worldLevel == 11) {
            btnRex.setEnabled(true);
            btnRex.setVisible(true);
        } else if (worldLevel == 21) {
            btnAaron.setEnabled(true);
            btnAaron.setVisible(true);
        }
    }
    public void updateLabelAndBars(){
        
        checkActiveCharacterHp();        
        
        int percentageActiveCharacterHp = (activeCharacter.hp * 100) / activeCharacter.maxHp;
        int percentageActiveCharacterMana = (activeCharacter.mana * 100) / activeCharacter.maxMana;
        int percentageEnemyHp = (enemy.hp * 100) / enemy.maxHp;
        
        lblActiveCharacter.setText(activeCharacter.name);
        lblActiveCharacterHpAndMaxHp.setText(activeCharacter.hp + "/" + activeCharacter.maxHp);
        lblActiveCharacterManaAndMaxMana.setText(activeCharacter.mana + "/" + activeCharacter.maxMana);
        
        lblEnemyName.setText(enemy.name);
        lblEnemyHpAndMaxHp.setText(enemy.hp + "/" + enemy.maxHp);
        
        pBarActiveCharacterHP.setValue(percentageActiveCharacterHp);
        pBarActiveCharacterMana.setValue(percentageActiveCharacterMana);
        pBarEnemyHp.setValue(percentageEnemyHp);
        
        
        lblFloorLevel.setText("" + worldLevel);

        
    }
    
    private void checkActiveCharacterHp(){
        
        boolean RexisDead = false;
        boolean ArthisDead = false;
        boolean AaronisDead = false;
        
        if (activeCharacter == arth && arth.hp <= 0) {
            ArthisDead = true;
            btnArth.setEnabled(false);
            activeCharacter = rex;   
        }
            
        if (activeCharacter == rex && rex.hp <= 0) {
            RexisDead = true;
            btnRex.setEnabled(false);
            activeCharacter = aaron;   
        } else if (activeCharacter == aaron && aaron.hp <= 0) {
            AaronisDead = true;
            btnAaron.setEnabled(false);
            activeCharacter = arth;   
        } else if (rex.hp <= 0 || arth.hp <= 0 || aaron.hp <= 0) {
            System.out.println("Game Over");
        }
        
    }
    
    private void enemyTakeTurn(){
        
        unlockCharacter();
        int randomMove = (int)(Math.random()*1+1);
        
        switch (randomMove) {
            
            case 1:
                enemy.basicAttack(activeCharacter);
                System.out.println("PING");
                break;
                
            case 2:
                enemy.dodge(activeCharacter);
                break;
                
            case 3:
                enemy.skill1();
                break;
                
            case 4:
                enemy.skill2();
                break;
                
                
            default:
                throw new AssertionError();
        }
        
        if(hasLost()) {
            System.out.println("You lost lmao");
            System.exit(0);
        }
    }
    
    private int basicAttackDamageDealt(){
        int critChance = (int)(Math.random()*80+1);
        if (critChance < activeCharacter.critRate) {
            return activeCharacter.baseAttack * (1 + activeCharacter.critDamage);
        }
        return activeCharacter.baseAttack;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Inventory;
    private javax.swing.JPanel PanelBattleDoings;
    private javax.swing.JPanel PanelBattlemiscellaneous;
    private javax.swing.JPanel PanelEnemyInfo;
    private javax.swing.JPanel PanelPlayerInfo;
    private javax.swing.JButton Shop;
    private javax.swing.JButton btnAaron;
    private javax.swing.JButton btnArth;
    private javax.swing.JButton btnBasicAttack;
    private javax.swing.JButton btnDodge;
    private javax.swing.JButton btnRex;
    private javax.swing.JButton btnSkill1;
    private javax.swing.JButton btnSkill2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblActiveCharacter;
    private javax.swing.JLabel lblActiveCharacterHpAndMaxHp;
    private javax.swing.JLabel lblActiveCharacterManaAndMaxMana;
    private javax.swing.JLabel lblEnemyHpAndMaxHp;
    private javax.swing.JLabel lblEnemyName;
    private javax.swing.JLabel lblFloorLevel;
    private javax.swing.JLabel lblSkill2Icon;
    private javax.swing.JProgressBar pBarActiveCharacterHP;
    private javax.swing.JProgressBar pBarActiveCharacterMana;
    private javax.swing.JProgressBar pBarEnemyHp;
    // End of variables declaration//GEN-END:variables
}
